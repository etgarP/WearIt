import React, { useContext, useEffect, useState } from "react";
import {
  View,
  StyleSheet,
  Image,
  ScrollView,
  TouchableOpacity,
} from "react-native";
import { Appbar, IconButton } from "react-native-paper";
import { DesingerObjectContext } from "../navigation/designerObjectProvider";

const MixAndMatch = ({ navigation }) => {
  const { design } = useContext(DesingerObjectContext);
  const [selectedImage, setSelectedImage] = useState(
    design?.clientInfo[0].image || null
  );

  // // Filter clothes that have 'imageOfWornCloth'
  const clothes =
    design?.design[0].items?.filter((item) => item.imageOfWornCloth) || [];
  return (
    <View style={styles.container}>
      {/* Top Appbar */}
      <Appbar.Header>
        <Appbar.BackAction onPress={() => navigation.goBack()} />
        <Appbar.Content title="Mix & Match" />
      </Appbar.Header>

      {/* Model Image */}
      <View style={styles.modelContainer}>
        <Image
          source={
            selectedImage
              ? selectedImage.startsWith("data:")
                ? { uri: selectedImage }
                : {
                    uri: `data:image/jpeg;base64,${selectedImage}`,
                  }
              : null // Fallback image if no image is provided
          }
          style={styles.modelImage}
        />
      </View>

      {/* Scrollable Clothes Section */}
      <View style={styles.scrollContainer}>
        <ScrollView horizontal showsHorizontalScrollIndicator={false}>
          {clothes.map((item) => (
            <TouchableOpacity
              key={item._id} // Add unique key here
              style={styles.plusButton}
              onPress={() => {
                if (selectedImage != item.imageOfWornCloth) {
                  setSelectedImage(item.imageOfWornCloth);
                } else {
                  setSelectedImage(design?.clientInfo[0].image);
                }
              }} // Update image when pressed
            >
              <Image
                source={
                  item.imageOfCloth
                    ? item.imageOfCloth.startsWith("data:")
                      ? { uri: item.imageOfCloth }
                      : {
                          uri: `data:image/jpeg;base64,${item.imageOfCloth}`,
                        }
                    : null // Fallback image if no image is provided
                }
                style={styles.clothesImage}
              />
            </TouchableOpacity>
          ))}

          {/* Plus Button */}
          <TouchableOpacity
            style={styles.plusButton}
            onPress={() => navigation.navigate("ChooseOutfit")}
          >
            <IconButton icon="plus" size={30} color="black" />
          </TouchableOpacity>
        </ScrollView>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#fffbfe",
  },
  modelContainer: {
    flex: 2,
    justifyContent: "center",
    alignItems: "center",
  },
  modelImage: {
    width: 200,
    height: 400,
    resizeMode: "contain",
  },
  scrollContainer: {
    flex: 1,
    padding: 10,
  },
  clothesImage: {
    width: 80,
    height: 80,
    marginHorizontal: 10,
    borderRadius: 10,
  },
  plusButton: {
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "#eee",
    width: 80,
    height: 80,
    marginHorizontal: 10,
    borderRadius: 40,
  },
});

export default MixAndMatch;

const l = {
  clientInfo: [
    {
      __v: 0,
      _id: "67430ea41058420c9f7330cb",
      age: 12,
      allergies: "",
      city: "r",
      gender: "Male",
      image:
        "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
      measurements: [Object],
      name: "tr",
      other: "",
      religion: "r",
      username: "tr",
      work: "r",
    },
  ],
  design: [
    {
      __v: 4,
      _id: "67432e24e76d79e3be2b77e9",
      items: [Array],
      orderId: "67432e24e76d79e3be2b77e7",
    },
  ],
};
